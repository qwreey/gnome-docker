#!/bin/sh

# Create env file
/usr/local/bin/envcheck > /etc/gnome-docker/env
[ "$?" != "0" ] && exit 1
sed -ri 's/^(.*)$/GD_\1/' /etc/gnome-docker/env
get_val() {
    cat /etc/gnome-docker/env | grep "^$1=" | sed -r 's/[^=]*=//'
}
GD_DEBUG="$(get_val GD_DEBUG)"
debug() {
    [ "$GD_DEBUG" == "true" ] && echo "DEBUG: $1"
}

# Create user session
mkdir -p /var/lib/systemd/linger
debug "Created linger directory /var/lib/systemd/linger"
if [[ "$(get_val GD_ROOTMODE)" == "true" ]]; then
    systemctl --user enable -q session-manager.service
    debug "enabled session manager service for root"
    touch /var/lib/systemd/linger/root
    debug "enabled linger for root"
else
    useradd -m -s /bin/bash gnome
    [ "$(get_val "XVFB_GPU")" == "true" ] && usermod -aG video,render gnome
    debug "user 'gnome' created"
    su gnome sh -c 'systemctl --user enable -q session-manager.service'
    debug "enabled session manager service for gnome"
    touch /var/lib/systemd/linger/gnome
    debug "enabled linger for gnome"
    [ -e '/host' ] && chown -R gnome /host
    debug "chown host dir to gnome"
    [ -e '/home/gnome' ] && chown -R gnome /home/gnome
    debug "created home directory for gnome"
fi

# Setup machine id
if [ -e '/host' ]; then
    [ ! -e /host/machine-id ] && touch /host/machine-id
    [ -e /etc/machine-id ] && rm /etc/machine-id
    ln -s /host/machine-id /etc/machine-id
    debug "machine-id updated"
fi

# Run systemd
MASKFLAG="--quiet"
[ "$GD_DEBUG" == "true" ] && MASKFLAG=""
systemctl mask $MASKFLAG rtkit-daemon.service geoclue.service
debug "masked unavailable services"
debug "starting systemd . . ."
exec /sbin/init $(get_val GD_SYSTEMD_CMDLINE)
